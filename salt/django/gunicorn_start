#!/bin/bash

export MPLCONFIGDIR="/home/{{ project_name }}/run/"
 
NAME="{{ project_name }}"                                  # Name of the application
DJANGODIR=/home/{{ project_name }}/src/{{ project_name }}/             # Django project directory
SOCKFILE=/home/{{ project_name }}/run/gunicorn.sock  # we will communicte using this unix socket
PIDFILE=/home/{{ project_name }}/run/gunicorn.pid
USER={{ project_name }}                                       # the user to run as
GROUP={{ project_name }}                                      # the group to run as
NUM_WORKERS=3                                     # how many worker processes should Gunicorn spawn
DJANGO_SETTINGS_MODULE={{ project_name }}.settings             # which settings file should Django use
DJANGO_WSGI_MODULE={{ project_name }}.wsgi                     # WSGI module name
 
echo "Starting $NAME"
 
# Activate the virtual environment
cd $DJANGODIR
source /home/{{ project_name }}/bin/activate
export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
export PYTHONPATH=$DJANGODIR:$PYTHONPATH
export PROD=1
 
# Create the run directory if it doesn't exist
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR
 
# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)
exec gunicorn ${DJANGO_WSGI_MODULE}:application \
  --name $NAME \
  --workers $NUM_WORKERS \
  --user=$USER --group=$GROUP \
  --log-level=debug \
  --bind=unix:$SOCKFILE \
  --pid $PIDFILE
